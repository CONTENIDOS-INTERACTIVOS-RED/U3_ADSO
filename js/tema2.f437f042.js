(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["tema2"],{"0661":function(a,t,e){a.exports=e.p+"img/icono-yt.0e5f1361.svg"},"0675":function(a,t,e){a.exports=e.p+"img/22.a602ff24.svg"},"07a0":function(a,t,e){a.exports=e.p+"img/24.7e4effe1.svg"},"144d":function(a,t,e){a.exports=e.p+"img/10.3320d8b8.png"},2226:function(a,t,e){a.exports=e.p+"img/19.272fbfe3.svg"},2391:function(a,t,e){a.exports=e.p+"img/material-complementario.06dbfac1.svg"},"2aad":function(a,t,e){a.exports=e.p+"img/18.dafcb898.png"},"387c":function(a,t,e){a.exports=e.p+"img/f1.2615080b.svg"},"3b08":function(a,t,e){a.exports=e.p+"img/slide-4.317b305d.svg"},4234:function(a,t,e){a.exports=e.p+"img/12.a8def746.svg"},"5b0d":function(a,t,e){"use strict";e.r(t);var s=function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"curso-main-container pb-3"},[s("BannerInterno",{attrs:{subTitulo:"2. Patrones de diseño (Factory, Singleton)"}}),s("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 overflow-hidden"},[a._m(0),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("Ambos patrones contribuyen a la creación de arquitecturas más modulares, escalables y fáciles de mantener, al separar claramente la lógica de creación de objetos del resto de la aplicación (Sampedro Hernández, 2011).")]),a._m(1),a._m(2),s("div",{staticClass:"bg-full-width bg-color-8 mb-lg-5"},[s("div",{staticClass:"px-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center"},[a._m(3),s("div",{staticClass:"col-lg-8 text-white"},[s("h2",{staticClass:"mb-4",attrs:{"data-aos":"flip-up"}},[a._v("Introducción a los patrones de diseño")]),a._m(4),s("a",{staticClass:"anexo mb-4 bg-white w-fit",attrs:{href:a.obtenerLink("/downloads/Anexo_4.pdf"),target:"_blank","data-aos":"flip-up"}},[s("div",{staticClass:"anexo__icono",style:{"background-color":"#FCDFDB"}},[s("img",{attrs:{src:e("f906")}})]),a._m(5)])])])])]),a._m(6),a._m(7),a._m(8),s("div",{staticClass:"row align-items-start mb-5"},[s("div",{staticClass:"col-lg-8"},[s("AcordionA",{attrs:{tipo:"b"}},[s("div",{staticClass:"div",attrs:{titulo:"Singleton"}},[s("p",[a._v("Este patrón garantiza que una clase solo tenga una instancia en todo el sistema, y proporciona un punto de acceso global a ella. Es útil cuando se necesita controlar el acceso a recursos compartidos, como archivos de configuración, conexiones a bases de datos o servicios globales.")])]),s("div",{staticClass:"div",attrs:{titulo:"Factory Method"}},[s("p",[a._v("Permite delegar la creación de objetos a subclases que deciden qué clase concreta instanciar. Es útil cuando se desea desacoplar el código cliente del tipo exacto del objeto que necesita.")])]),s("div",{staticClass:"div",attrs:{titulo:"Abstract Factory"}},[s("p",[a._v("Este patrón permite crear familias de objetos relacionados sin especificar sus clases concretas. Es ideal para sistemas que requieren garantizar la compatibilidad entre múltiples productos o componentes (Piattini & Garzás, 2015).")])]),s("div",{staticClass:"div",attrs:{titulo:"Builder"}},[s("p",[a._v("Este patrón se aplica cuando se requiere construir objetos complejos paso a paso, permitiendo distintas representaciones del mismo producto final. Resulta útil en casos donde la construcción requiere muchos parámetros opcionales.")])]),s("div",{staticClass:"div",attrs:{titulo:"Prototype"}},[s("p",[a._v("Este patrón se utiliza para clonar objetos ya existentes, especialmente cuando la creación de un objeto es costosa en términos de tiempo o recursos.")])])])],1),a._m(9)]),a._m(10),a._m(11),s("div",{staticClass:"bg-full-width bg-color-8 mb-lg-5"},[s("div",{staticClass:"px-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center"},[a._m(12),s("div",{staticClass:"col-lg-8 text-white"},[s("h2",{staticClass:"mb-4",attrs:{"data-aos":"flip-up"}},[a._v("Patrón Singleton: concepto y fundamentos ")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[a._v("En el PDF Patrón Singleton, se analiza cómo este patrón creacional permite restringir la creación de objetos a una sola instancia por clase, proporcionando un punto de acceso global. A través de ejemplos prácticos, se ilustra su estructura, ventajas, limitaciones y aplicaciones comunes, como el manejo de configuraciones, logs o conexiones a bases de datos.")]),s("a",{staticClass:"anexo mb-4 bg-white w-fit",attrs:{href:a.obtenerLink("/downloads/Anexo_5.pdf"),target:"_blank","data-aos":"flip-up"}},[s("div",{staticClass:"anexo__icono",style:{"background-color":"#FCDFDB"}},[s("img",{attrs:{src:e("f906")}})]),a._m(13)])])])])]),a._m(14),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("La implementación técnica del patrón Singleton permite controlar eficazmente la creación de instancias dentro de una aplicación, asegurando que una clase solo tenga un único objeto activo a lo largo de su ciclo de vida.")]),s("div",{staticClass:"bg-full-width bg-color-8 mb-lg-5"},[s("div",{staticClass:"px-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center"},[s("div",{staticClass:"col-lg-8 text-white"},[s("h2",{staticClass:"mb-4",attrs:{"data-aos":"flip-up"}},[a._v("Implementación del patrón Singleton ")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[a._v("En el PDF Implementación del patrón Singleton, se presentan las principales estructuras de codificación, incluyendo ejemplos clásicos y versiones adaptadas a entornos multihilo. Asimismo, se exponen variaciones comunes, aplicaciones prácticas y recomendaciones para su correcta utilización en el desarrollo de software profesional.")]),s("a",{staticClass:"anexo mb-4 bg-white w-fit",attrs:{href:a.obtenerLink("/downloads/Anexo_6.pdf"),target:"_blank","data-aos":"flip-up"}},[s("div",{staticClass:"anexo__icono",style:{"background-color":"#FCDFDB"}},[s("img",{attrs:{src:e("f906")}})]),a._m(15)])]),a._m(16)])])]),a._m(17),a._m(18),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-up"}},[a._v("El patrón Factory Method, también conocido como método fábrica, es un patrón creacional que permite delegar la creación de objetos a subclases, promoviendo así la flexibilidad y extensibilidad del código sin comprometer su estructura. En lugar de instanciar directamente una clase concreta, el patrón define una interfaz para la creación de objetos, dejando que las subclases decidan qué clase instanciar (Piattini & Garzás, 2015).")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("Este enfoque resulta especialmente útil en situaciones donde el código debe trabajar con objetos cuyo tipo exacto se desconoce hasta el tiempo de ejecución, o cuando se desea desacoplar el proceso de creación del uso concreto del objeto.")]),s("h2",[a._v("Fundamentos del patrón Factory Method")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-up"}},[a._v("La estructura del patrón se basa en tres componentes principales:")]),a._m(19),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-up"}},[a._v("Este patrón promueve el principio de abierto/cerrado, dado que permite extender la creación de nuevos productos sin modificar el código existente del creador.")]),a._m(20),a._m(21),s("div",{staticClass:"bg-full-width bg-fondo-info mb-5"},[s("div",{staticClass:"p-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center mb-5"},[s("div",{staticClass:"col-lg-10"},[s("ImagenInfografica",{staticClass:"color-secundario",scopedSlots:a._u([{key:"imagen",fn:function(){return[s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"1050px"},attrs:{src:e("db1b"),alt:""}})])]},proxy:!0}])},[s("div",{staticClass:"bg-color-white box-shadow p-3",attrs:{x:"9%",y:"30%",numero:"+"}},[s("h5",[a._v("Identificar la necesidad de crear objetos de forma flexible")]),s("p",[a._v("Primero se debe reconocer que se tiene una lógica en la aplicación que crea objetos de una clase determinada, pero se desea desacoplar la creación del objeto de su uso. Esto ocurre, por ejemplo, cuando no se sabe de antemano qué clase exacta se necesitará instanciar.")])]),s("div",{staticClass:"bg-color-white box-shadow p-3",attrs:{x:"25.7%",y:"18%",numero:"+"}},[s("h5",[a._v("Definir una interfaz o clase abstracta común")]),s("p",[a._v("Crear una interfaz o clase base que defina los métodos que todas las clases concretas deben implementar. Esto permite que las clases creadas por la fábrica sean tratadas de manera uniforme.")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"350px"},attrs:{src:e("2226"),alt:""}})])]),s("div",{staticClass:"bg-color-white box-shadow p-3",attrs:{x:"58%",y:"12%",numero:"+"}},[s("h5",[a._v("Crear las clases concretas que implementan la interfaz")]),s("p",[a._v("Desarrollar una o más clases que implementen la interfaz definida. Estas serán las posibles variantes de objetos que el Factory podrá crear.")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"350px"},attrs:{src:e("a95f"),alt:""}})])]),s("div",{staticClass:"bg-color-white box-shadow p-3",attrs:{x:"74.5%",y:"31%",numero:"+"}},[s("h5",[a._v("Crear la clase Factory")]),s("p",[a._v("Esta clase será la encargada de decidir qué objeto concreto instanciar, según parámetros dados (por ejemplo, un string o un enum).")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"350px"},attrs:{src:e("f2a6"),alt:""}})])]),s("div",{staticClass:"bg-color-white box-shadow p-3",attrs:{x:"91%",y:"38%",numero:"+"}},[s("h5",[a._v("Utilizar la fábrica desde el código cliente")]),s("p",[a._v("En el código donde se necesita crear un producto, simplemente se llama al método de la fábrica, evitando la creación directa de objetos concretos.")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"350px"},attrs:{src:e("0675"),alt:""}})])])])],1)])])]),s("h2",[a._v("Ejemplo práctico en Java: creación de notificaciones")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-up"}},[a._v("Supóngase que una aplicación permite enviar notificaciones por distintos canales, como correo electrónico o SMS. Se desea que el cliente no conozca cómo se crea cada tipo de notificación.")]),s("div",{staticClass:"bg-full-width bg-fondo-slider mb-5"},[s("div",{staticClass:"p-4 p-md-5"},[s("SlyderA",{staticClass:"bg-white",attrs:{tipo:"b"}},[s("div",{staticClass:"row align-items-center p-4 p-md-5"},[s("div",{staticClass:"col-lg"},[s("h4",{staticClass:"mb-4 text-center"},[a._v("Interfaz Producto")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"670px"},attrs:{src:e("c962")}})])])]),s("div",{staticClass:"row align-items-center p-4 p-md-5"},[s("div",{staticClass:"col-lg"},[s("h4",{staticClass:"mb-4 text-center"},[a._v("Productos Concretos")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"670px"},attrs:{src:e("5d3f")}})])])]),s("div",{staticClass:"row align-items-center p-4 p-md-5"},[s("div",{staticClass:"col-lg"},[s("h4",{staticClass:"mb-4 text-center"},[a._v("Creador abstracto")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"670px"},attrs:{src:e("d1e6")}})])])]),s("div",{staticClass:"row align-items-center p-4 p-md-5"},[s("div",{staticClass:"col-lg"},[s("h4",{staticClass:"mb-4 text-center"},[a._v("Creadores concretos")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"670px"},attrs:{src:e("3b08")}})])])]),s("div",{staticClass:"row align-items-center p-4 p-md-5"},[s("div",{staticClass:"col-lg"},[s("h4",{staticClass:"mb-4 text-center"},[a._v("Uso desde el cliente")]),s("figure",[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"670px"},attrs:{src:e("7fb9")}})])])])])],1)]),a._m(22),s("h2",{staticClass:"mb-5"},[a._v("Aplicación en otros lenguajes")]),s("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("Este patrón puede implementarse con facilidad en otros lenguajes como Python, C#, Kotlin o JavaScript, adaptando la sintaxis, pero manteniendo la estructura conceptual. Por ejemplo, en Python se puede utilizar herencia y clases abstractas con abc.ABC, y en JavaScript, funciones constructoras o clases ES6 para lograr una implementación funcional equivalente.")]),a._m(23),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-up"}},[a._v("La implementación de patrones de diseño en el desarrollo de software representa una estrategia clave para mejorar la organización, la eficiencia y la calidad del código.")]),s("div",{staticClass:"bg-full-width bg-color-8 mb-lg-0"},[s("div",{staticClass:"px-4 p-md-5"},[s("div",{staticClass:"row justify-content-center align-items-center"},[a._m(24),s("div",{staticClass:"col-lg-8 text-white"},[s("h2",{staticClass:"mb-4",attrs:{"data-aos":"flip-up"}},[a._v("Beneficios de implementar patrones de diseño ")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[a._v("En el PDF Beneficios de implementar patrones de diseño, se describen las ventajas que estos aportan al promover soluciones reutilizables, facilitar la comunicación entre desarrolladores y reducir el acoplamiento entre componentes. Se destaca cómo los patrones contribuyen a construir sistemas más mantenibles, escalables y alineados con los principios de la programación orientada a objetos.")]),s("a",{staticClass:"anexo mb-4 bg-white w-fit",attrs:{href:a.obtenerLink("/downloads/Anexo_7.pdf"),target:"_blank","data-aos":"flip-up"}},[s("div",{staticClass:"anexo__icono",style:{"background-color":"#FCDFDB"}},[s("img",{attrs:{src:e("f906")}})]),a._m(25)])])])])]),s("div",{staticClass:"bg-full-width border-top color-primario"},[s("div",{staticClass:"p-4 p-md-5"},[s("h2",{attrs:{"data-aos":"fade-left"}},[a._v("MATERIAL COMPLEMENTARIO")]),s("div",{staticClass:"row material-complementario"},[s("div",{staticClass:"col-12 col-md-6 col-lg-7"},[s("p",[a._v("Los invitamos a explorar el material complementario de este curso, en esta sección encontrará recursos que le permitirán profundizar y enriquecer su aprendizaje en los temas tratados en esta unidad.")]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3",style:{"max-width":"16px"},attrs:{src:e("a437")}}),s("a",{attrs:{href:"https://www.fdi.ucm.es/profesor/jpavon/poo/2.14pdoo.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("Pavón Mestras, J. (2004). Patrones de diseño orientado a objetos. Universidad Complutense de Madrid. ")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3",style:{"max-width":"16px"},attrs:{src:e("0661")}}),s("a",{attrs:{href:"https://www.youtube.com/watch?v=I6HkKii8jlM",target:"_blank",rel:"noopener noreferrer"}},[a._v("miw-upm. [@miwupm] (2020, 29 de septiembre). Introducción al Patrón Singleton. [Video]. YouTube.")])])]),a._m(26)])])])])],1)},i=[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"row mb-5 justify-content-center align-items-center"},[s("div",{staticClass:"col-lg-10"},[s("p",{staticClass:"mb-4"},[a._v("Los patrones de diseño, como "),s("b",[a._v("Factory")]),a._v(" y "),s("b",[a._v("Singleton")]),a._v(", representan soluciones reutilizables y comprobadas para problemas comunes en el desarrollo de "),s("em",[a._v("software")]),a._v(" orientado a objetos.")]),s("div",{staticClass:"bg-color-9 mb-0",attrs:{"data-aos":"fade-up"}},[s("div",{staticClass:"row justify-content-center align-items-center"},[s("div",{staticClass:"col-lg-auto"},[s("figure",[s("img",{attrs:{src:e("f563"),alt:""}})])]),s("div",{staticClass:"col-lg"},[s("div",{staticClass:"p-4"},[s("p",{staticClass:"mb-0",attrs:{"data-aos":"fade-up"}},[a._v("El patrón "),s("b",[a._v("Factory")]),a._v(" permite delegar la creación de objetos a una clase especializada, lo cual promueve el principio de abstracción y facilita la incorporación de nuevas clases sin alterar el código existente.")])])])])]),s("div",{staticClass:"bg-color-10 mb-0",attrs:{"data-aos":"fade-up"}},[s("div",{staticClass:"row justify-content-center align-items-center"},[s("div",{staticClass:"col-lg"},[s("div",{staticClass:"p-4"},[s("p",{staticClass:"mb-0",attrs:{"data-aos":"fade-up"}},[a._v("Por otro lado, el patrón "),s("b",[a._v("Singleton")]),a._v(" garantiza que una clase tenga una única instancia accesible globalmente, asegurando un punto de control centralizado, útil en casos como la gestión de configuraciones o conexiones compartidas.")])])]),s("div",{staticClass:"col-lg-auto"},[s("figure",[s("img",{attrs:{src:e("9b35"),alt:""}})])])])])])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_1","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.1")]),a._v(" Introducción a los patrones de diseño")])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("Los patrones de diseño constituyen una herramienta clave en la ingeniería de "),e("em",[a._v("software")]),a._v(", ya que ofrecen soluciones probadas a problemas comunes en el diseño de sistemas orientados a objetos.")])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-lg-4"},[s("figure",{attrs:{"data-aos":"zoom-in"}},[s("img",{attrs:{src:e("95e6"),alt:""}})])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-right"}},[a._v("En el PDF Introducción a los patrones de diseño, se explican los orígenes, propósitos y clasificaciones fundamentales de estos patrones, destacando su utilidad para crear "),e("em",[a._v("software")]),a._v(" más robusto, reutilizable y fácil de mantener. A través de ejemplos claros, se muestra cómo aplicar patrones creacionales, estructurales y de comportamiento en contextos reales de programación.")])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"anexo__texto"},[e("p",[e("strong",[a._v("Anexo. ")]),a._v(" Introducción a los patrones de diseño")])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_2","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.2")]),a._v(" Patrones creacionales: visión general")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"row mb-5"},[s("div",{staticClass:"col-lg-8"},[s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("Los patrones creacionales constituyen una categoría esencial dentro del conjunto de patrones de diseño orientados a objetos, puesto que abordan la forma en que los objetos son creados en el "),s("em",[a._v("software")]),a._v(". Su propósito principal es abstraer el proceso de instanciación, de modo que el código cliente no dependa directamente de las clases concretas, sino que trabaje con interfaces o clases abstractas. Esto promueve la flexibilidad, reutilización y mantenimiento del sistema (Piattini & Garzás, 2015).")]),s("div",{staticClass:"bg-color-4 p-4 mb-4",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"row align-items-start"},[s("div",{staticClass:"col-lg-auto"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"90px"},attrs:{src:e("eabe")}})]),s("div",{staticClass:"col-lg"},[s("p",{staticClass:"mb-0"},[a._v("En lugar de crear objetos directamente con la instrucción new, los patrones creacionales proporcionan mecanismos que permiten delegar esa responsabilidad, asegurando que la creación sea controlada, centralizada y adaptable, según el contexto de ejecución.")])])])])]),s("div",{staticClass:"col-lg-4"},[s("figure",[s("img",{attrs:{src:e("791e"),"data-aos":"zoom-in"}})])])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"row mb-5"},[s("div",{staticClass:"col-lg-4"},[s("figure",[s("img",{attrs:{src:e("7ebd"),"data-aos":"zoom-in"}})])]),s("div",{staticClass:"col-lg-8"},[s("h5",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("Principales patrones creacionales")]),s("p",{staticClass:"mb-4",attrs:{"data-aos":"fade-left"}},[a._v("Existen cinco patrones creacionales reconocidos ampliamente:")]),s("div",{staticClass:"bg-color-1 p-4 bg-icono-fondo mb-4",attrs:{id:"bg-icono","data-aos":"fade-left"}},[s("p",{staticClass:"mb-0"},[a._v("1. Singleton.")]),s("p",{staticClass:"mb-0"},[a._v("2. Factory Method.")]),s("p",{staticClass:"mb-0"},[a._v("3. Abstract Factory.")]),s("p",{staticClass:"mb-0"},[a._v("4. Builder.")]),s("p",{staticClass:"mb-0"},[a._v("5. Prototype.")])]),s("p",{staticClass:"mb-0"},[a._v("Cada uno resuelve un problema particular relacionado con la creación de objetos:")])])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-lg-4"},[s("figure",[s("img",{staticClass:"mb-4 mb-lg-0",attrs:{src:e("b83e"),alt:""}})])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_3","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.3")]),a._v(" Patrón Singleton: concepto y fundamentos")])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("p",{staticClass:"mb-5",attrs:{"data-aos":"fade-up"}},[a._v("El control de instancias en el diseño de "),e("em",[a._v("software")]),a._v(" es clave para asegurar la coherencia del comportamiento del sistema, especialmente cuando se trata de recursos compartidos.")])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-lg-4"},[s("figure",{attrs:{"data-aos":"zoom-in"}},[s("img",{attrs:{src:e("de8b"),alt:""}})])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"anexo__texto"},[e("p",[e("strong",[a._v("Anexo. ")]),a._v(" Patrón Singleton: concepto y fundamentos ")])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_4","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.4")]),a._v(" Implementación del patrón Singleton")])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"anexo__texto"},[e("p",[e("strong",[a._v("Anexo. ")]),a._v(" Implementación del patrón Singleton ")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-lg-4"},[s("figure",{attrs:{"data-aos":"zoom-in"}},[s("img",{attrs:{src:e("144d"),alt:""}})])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_5","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.5")]),a._v(" Patrón Factory Method: concepto y fundamento")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("figure",{staticClass:"bg-color-info p-4 p-md-5 mb-5"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"644px"},attrs:{src:e("387c"),"data-aos":"zoom-in"}})])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"row justify-content-center align-items-stretch mb-4"},[s("div",{staticClass:"col-lg-4"},[s("div",{staticClass:"bg-color-8 p-4 h-100",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-lg-auto"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"80px"},attrs:{src:e("dc80")}})]),s("div",{staticClass:"col-lg text-white"},[s("h5",{staticClass:"mb-2"},[a._v("Producto (Product)")]),s("p",{staticClass:"mb-0"},[a._v("Define la interfaz común de los objetos que se crean.")])])])])]),s("div",{staticClass:"col-lg-4"},[s("div",{staticClass:"bg-color-8 p-4 h-100",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-lg-auto"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"80px"},attrs:{src:e("4234")}})]),s("div",{staticClass:"col-lg text-white"},[s("h5",{staticClass:"mb-2"},[a._v("Creador (Creator)")]),s("p",{staticClass:"mb-0"},[a._v("Declara el método fábrica que devuelve objetos de tipo Producto.")])])])])]),s("div",{staticClass:"col-lg-4"},[s("div",{staticClass:"bg-color-8 p-4 h-100",attrs:{"data-aos":"fade-left"}},[s("div",{staticClass:"row align-items-center"},[s("div",{staticClass:"col-lg-auto"},[s("img",{staticClass:"mx-auto",staticStyle:{"max-width":"80px"},attrs:{src:e("9010")}})]),s("div",{staticClass:"col-lg text-white"},[s("h5",{staticClass:"mb-2"},[a._v("Creador Concreto (ConcreteCreator)")]),s("p",{staticClass:"mb-0"},[a._v("Implementa el método fábrica y decide qué objeto crear.")])])])])])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_6","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.6")]),a._v(" Implementación del patrón Factory Method")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"bg-full-width bg-color-11"},[s("div",{staticClass:"px-4 px-md-5 py-4"},[s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-lg-9"},[s("p",{attrs:{"data-aos":"fade-left"}},[a._v("La implementación del patrón Factory Method se basa en la creación de una jerarquía de clases en la que las subclases determinan la instancia concreta que se debe generar. El propósito fundamental es encapsular la lógica de creación de objetos en un método especializado, conocido como “fábrica”, permitiendo que el código cliente opere con abstracciones sin conocer las clases específicas involucradas.")]),s("div",{staticClass:"bg-color-4 p-4 bordes-3",attrs:{"data-aos":"fade-left"}},[s("p",{staticClass:"mb-0"},[a._v("Este patrón proporciona una solución efectiva cuando se necesita crear objetos que comparten una interfaz común, pero tienen comportamientos diferentes, dependiendo del contexto en el que se utilicen. Su implementación sigue una estructura bien definida que facilita la reutilización, la extensibilidad y el bajo acoplamiento entre componentes (Piattini & Garzás, 2015).")])])]),s("div",{staticClass:"col-lg-3"},[s("figure",[s("img",{attrs:{src:e("fefa"),"data-aos":"zoom-in"}})])])]),s("h2",{staticClass:"mb-5"},[a._v("Estructura de implementación")]),s("div",{staticClass:"row justify-content-center align-items-stretch mb-5"},[s("div",{staticClass:"col-lg-3 mb-4",attrs:{"data-aos":"zoom-in-up"}},[s("div",{staticClass:"custom-image-card-2 h-100"},[s("img",{staticClass:"custom-image-card__image",attrs:{src:e("6ebe"),alt:""}}),s("div",{staticClass:"custom-image-card__text p-4"},[s("h5",{staticClass:"mb-2 text-center"},[a._v("Interfaz Producto")]),s("p",{staticClass:"mb-0 text-center"},[a._v("Define el contrato que todas las clases concretas deben seguir.")])])])]),s("div",{staticClass:"col-lg-3 mb-4",attrs:{"data-aos":"zoom-in-down"}},[s("div",{staticClass:"custom-image-card-2 h-100"},[s("img",{staticClass:"custom-image-card__image",attrs:{src:e("a0b3"),alt:""}}),s("div",{staticClass:"custom-image-card__text p-4"},[s("h5",{staticClass:"mb-2 text-center"},[a._v("Clases Producto Concreto")]),s("p",{staticClass:"mb-0 text-center"},[a._v("Implementan el comportamiento específico del producto.")])])])]),s("div",{staticClass:"col-lg-3 mb-4",attrs:{"data-aos":"zoom-in-down"}},[s("div",{staticClass:"custom-image-card-2 h-100"},[s("img",{staticClass:"custom-image-card__image",attrs:{src:e("b2e7"),alt:""}}),s("div",{staticClass:"custom-image-card__text p-4"},[s("h5",{staticClass:"mb-2 text-center"},[a._v("Clase Creadora (abstracta o interfaz)")]),s("p",{staticClass:"mb-0 text-center"},[a._v("Declara el método fábrica (factoryMethod) y posiblemente métodos adicionales que utilizan el producto.")])])])]),s("div",{staticClass:"col-lg-3 mb-4",attrs:{"data-aos":"zoom-in-down"}},[s("div",{staticClass:"custom-image-card-2 h-100"},[s("img",{staticClass:"custom-image-card__image",attrs:{src:e("2aad"),alt:""}}),s("div",{staticClass:"custom-image-card__text p-4"},[s("h5",{staticClass:"mb-2 text-center"},[a._v("Clases Creadoras Concretas")]),s("p",{staticClass:"mb-0 text-center"},[a._v("Sobrescriben el método fábrica para instanciar productos específicos.")])])])])]),s("p",[a._v("Los pasos para implementar patrón de diseño Factory, son:")])])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"bg-full-width bg-color-3 mb-0"},[s("div",{staticClass:"p-4 p-md-5"},[s("h2",{staticClass:"mb-5"},[a._v("Aspectos claves de la implementación")]),s("div",{staticClass:"row justify-content-center align-items-stretch mb-0"},[s("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[s("div",{staticClass:"bg-color-white box-shadow px-4 py-5 h-100"},[s("img",{staticClass:"mx-auto d-block mb-4",staticStyle:{width:"90px"},attrs:{src:e("96e2"),alt:""}}),s("h4",{staticClass:"mb-2 text-center"},[a._v("Flexibilidad")]),s("p",{staticClass:"mb-0 text-center"},[a._v("La lógica de creación está aislada, lo que permite modificar los productos sin cambiar el código cliente.")])])]),s("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[s("div",{staticClass:"bg-color-white box-shadow px-4 py-5 h-100"},[s("img",{staticClass:"mx-auto d-block mb-4",staticStyle:{width:"90px"},attrs:{src:e("07a0"),alt:""}}),s("h4",{staticClass:"mb-2 text-center"},[a._v("Reusabilidad")]),s("p",{staticClass:"mb-0 text-center"},[a._v("El método notificar() funciona independientemente del tipo de notificación que se cree.")])])]),s("div",{staticClass:"col-lg-4 mb-4",attrs:{"data-aos":"zoom-in-up"}},[s("div",{staticClass:"bg-color-white box-shadow px-4 py-5 h-100"},[s("img",{staticClass:"mx-auto d-block mb-4",staticStyle:{width:"90px"},attrs:{src:e("d144"),alt:""}}),s("h4",{staticClass:"mb-2 text-center"},[a._v("Extensibilidad")]),s("p",{staticClass:"mb-0 text-center"},[a._v("Agregar un nuevo canal de notificación (por ejemplo, push) solo implica crear una nueva clase concreta y una nueva fábrica.")])])])])])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"titulo-segundo",attrs:{id:"t_2_7","data-aos":"flip-up"}},[e("h2",[e("span",[a._v("2.7")]),a._v(" Beneficios de implementar patrones de diseño")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-lg-4"},[s("figure",{attrs:{"data-aos":"zoom-in"}},[s("img",{attrs:{src:e("d583"),alt:""}})])])},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"anexo__texto"},[e("p",[e("strong",[a._v("Anexo. ")]),a._v(" Beneficios de implementar patrones de diseño ")])])},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"col-12 col-md-6 col-lg-3 offset-lg-1"},[s("figure",[s("img",{attrs:{src:e("2391"),alt:""}})])])}],o={name:"Tema2",mounted:function(){var a=this;this.$nextTick((function(){a.$aosRefresh()}))}},c=o,n=e("2877"),r=Object(n["a"])(c,s,i,!1,null,null,null);t["default"]=r.exports},"5d3f":function(a,t,e){a.exports=e.p+"img/slide-2.f18a57ff.svg"},"6ebe":function(a,t,e){a.exports=e.p+"img/15.40680ddc.png"},"791e":function(a,t,e){a.exports=e.p+"img/5.d1e385a2.png"},"7ebd":function(a,t,e){a.exports=e.p+"img/6.05f1ca70.png"},"7fb9":function(a,t,e){a.exports=e.p+"img/slide-5.6db0fb9b.svg"},9010:function(a,t,e){a.exports=e.p+"img/13.d662aac6.svg"},"95e6":function(a,t,e){a.exports=e.p+"img/3.ece126b9.png"},"96e2":function(a,t,e){a.exports=e.p+"img/23.eb200ed0.svg"},"9b35":function(a,t,e){a.exports=e.p+"img/2.6e1c8ce6.svg"},a0b3:function(a,t,e){a.exports=e.p+"img/16.fc30768f.png"},a437:function(a,t,e){a.exports=e.p+"img/link.317b045f.svg"},a95f:function(a,t,e){a.exports=e.p+"img/20.074a8d80.svg"},b2e7:function(a,t,e){a.exports=e.p+"img/17.ea159bc7.png"},b83e:function(a,t,e){a.exports=e.p+"img/8.5dd83edf.png"},c962:function(a,t,e){a.exports=e.p+"img/slide-1.b1e633f3.svg"},d144:function(a,t,e){a.exports=e.p+"img/25.610ddbf3.svg"},d1e6:function(a,t,e){a.exports=e.p+"img/slide-3.558a84df.svg"},d583:function(a,t,e){a.exports=e.p+"img/26.912d8063.png"},db1b:function(a,t,e){a.exports=e.p+"img/info1.258c0e74.svg"},dc80:function(a,t,e){a.exports=e.p+"img/11.4c76f2cc.svg"},de8b:function(a,t,e){a.exports=e.p+"img/9.fa3601bb.png"},eabe:function(a,t,e){a.exports=e.p+"img/4.1dc4d01d.svg"},f2a6:function(a,t,e){a.exports=e.p+"img/21.2319e3a1.svg"},f563:function(a,t,e){a.exports=e.p+"img/1.a6cb096e.svg"},f906:function(a,t,e){a.exports=e.p+"img/icono-pdf.5c464bfe.svg"},fefa:function(a,t,e){a.exports=e.p+"img/14.6178646b.svg"}}]);
//# sourceMappingURL=tema2.f437f042.js.map